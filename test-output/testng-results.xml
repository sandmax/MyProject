<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="78" started-at="2018-01-13T12:35:39Z" finished-at="2018-01-13T12:35:39Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="78" started-at="2018-01-13T12:35:39Z" finished-at="2018-01-13T12:35:39Z">
      <class name="MyPackage.testNG">
        <test-method status="PASS" signature="test_Before()[pri:0, instance:MyPackage.testNG@25af5db5]" name="test_Before" is-config="true" duration-ms="16" started-at="2018-01-13T06:35:39Z" finished-at="2018-01-13T06:35:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_Before -->
        <test-method status="PASS" signature="test_a()[pri:1, instance:MyPackage.testNG@25af5db5]" name="test_a" duration-ms="15" started-at="2018-01-13T06:35:39Z" finished-at="2018-01-13T06:35:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_a -->
        <test-method status="PASS" signature="test_b()[pri:3, instance:MyPackage.testNG@25af5db5]" name="test_b" duration-ms="0" started-at="2018-01-13T06:35:39Z" finished-at="2018-01-13T06:35:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_b -->
        <test-method status="PASS" signature="test_Before()[pri:0, instance:MyPackage.testNG@25af5db5]" name="test_Before" is-config="true" duration-ms="0" started-at="2018-01-13T06:35:39Z" finished-at="2018-01-13T06:35:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_Before -->
        <test-method status="PASS" signature="test_Before()[pri:0, instance:MyPackage.testNG@25af5db5]" name="test_Before" is-config="true" duration-ms="0" started-at="2018-01-13T06:35:39Z" finished-at="2018-01-13T06:35:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_Before -->
        <test-method status="PASS" signature="test_After()[pri:0, instance:MyPackage.testNG@25af5db5]" name="test_After" is-config="true" duration-ms="0" started-at="2018-01-13T06:35:39Z" finished-at="2018-01-13T06:35:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_After -->
        <test-method status="FAIL" signature="test_A()[pri:0, instance:MyPackage.testNG@25af5db5]" name="test_A" duration-ms="16" started-at="2018-01-13T06:35:39Z" depends-on-methods="MyPackage.testNG.test_b, MyPackage.testNG.test_a" finished-at="2018-01-13T06:35:39Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<true> but was:<false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<true> but was:<false>at org.junit.Assert.fail(Assert.java:88)at org.junit.Assert.failNotEquals(Assert.java:834)at org.junit.Assert.assertEquals(Assert.java:118)at org.junit.Assert.assertEquals(Assert.java:144)at MyPackage.testNG.test_A(testNG.java:36)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_A -->
        <test-method status="PASS" signature="test_After()[pri:0, instance:MyPackage.testNG@25af5db5]" name="test_After" is-config="true" duration-ms="0" started-at="2018-01-13T06:35:39Z" finished-at="2018-01-13T06:35:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_After -->
        <test-method status="PASS" signature="test_After()[pri:0, instance:MyPackage.testNG@25af5db5]" name="test_After" is-config="true" duration-ms="0" started-at="2018-01-13T06:35:39Z" finished-at="2018-01-13T06:35:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_After -->
      </class> <!-- MyPackage.testNG -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
